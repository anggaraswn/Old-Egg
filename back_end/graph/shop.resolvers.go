package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"
	"fmt"

	"github.com/anggaraswn/gqlgen-todos/graph/model"
)

// CreateShop is the resolver for the createShop field.
func (r *mutationResolver) CreateShop(ctx context.Context, input model.NewShop) (*model.Shop, error) {
	panic(fmt.Errorf("not implemented: CreateShop - createShop"))
}

// UpdateShop is the resolver for the updateShop field.
func (r *mutationResolver) UpdateShop(ctx context.Context, input model.NewShop) (*model.Shop, error) {
	panic(fmt.Errorf("not implemented: UpdateShop - updateShop"))
}

// Shops is the resolver for the Shops field.
func (r *queryResolver) Shops(ctx context.Context) ([]*model.Shop, error) {
	panic(fmt.Errorf("not implemented: Shops - Shops"))
}

// Shop is the resolver for the Shop field.
func (r *queryResolver) Shop(ctx context.Context, id *string, name *string) (*model.Shop, error) {
	panic(fmt.Errorf("not implemented: Shop - Shop"))
}

// User is the resolver for the user field.
func (r *shopResolver) User(ctx context.Context, obj *model.Shop) (*model.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// Products is the resolver for the products field.
func (r *shopResolver) Products(ctx context.Context, obj *model.Shop) ([]*model.Product, error) {
	panic(fmt.Errorf("not implemented: Products - products"))
}

// Shop returns ShopResolver implementation.
func (r *Resolver) Shop() ShopResolver { return &shopResolver{r} }

type shopResolver struct{ *Resolver }
