# GraphQL schema example
#
# https://gqlgen.com/getting-started/
directive @goField(
    forceResolver: Boolean
    name: String
) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

scalar Any

directive @auth on FIELD_DEFINITION

enum UserRole {
    USER
    ADMIN
    SHOP
}

type User {
    id: ID!
    firstName: String!
    lastName: String!
    email: String!
    phone: String
    password: String!
    subscribe: Boolean!
    banned: Boolean!
    role: UserRole!
    currency: Float!
    verificationCode: String
    verificationCodeValid: Time
}

input NewUser {
    firstName: String!
    lastName: String!
    email: String!
    password: String!
    subscribe: Boolean!
    banned: Boolean!
    role: UserRole!
}

type AuthOps {
    login(email: String!, password: String!): Any! @goField(forceResolver: true)
    register(input: NewUser!): Any! @goField(forceResolver: true)
}

type Mutation {
    auth: AuthOps! @goField(forceResolver: true)
    createUser(input: NewUser!, phone: String): User!
    updatePhonenumber(phone: String!): User! @goField(forceResolver: true)
    updatePassword(currentPassword: String!, newPassword: String!): User!
        @goField(forceResolver: true)
    updateCurrency(currency: Float!): User! @goField(forceResolver: true)
    insertVerificationCode(
        email: String!
        verificationCode: String!
        duration: Int!
    ): User! @goField(forceResolver: true)
    validateVerificationCode(email: String!, verificationCode: String!): Any!
        @goField(forceResolver: true)
    validateEmail(email: String!): Boolean! @goField(forceResolver: true)
}

type Query {
    user(id: ID!): User! @goField(forceResolver: true) @auth
    protected: String! @goField(forceResolver: true) @auth
    getCurrentUser: User! @goField(forceResolver: true) @auth
}
