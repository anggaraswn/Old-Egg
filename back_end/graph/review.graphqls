scalar Time

type Review {
    id: ID!
    user: User! @goField(forceResolver: true)
    product: Product! @goField(forceResolver: true)
    createdAt: Time!
    rating: Float!
    description: String!
}

input NewReview {
    productID: ID!
    rating: Float!
    description: String!
}

type ShopReview {
    id: ID!
    shop: Shop! @goField(forceResolver: true)
    user: User! @goField(forceResolver: true)
    transactionHeader: TransactionHeader! @goField(forceResolver: true)
    rating: Float!
    review: String!
    reviewDetails: String!
    createdAt: Time!
    deliveryOnTime: Boolean!
    productAccuracy: Boolean!
    serviceSatisfaction: Boolean!
    helpful: Boolean!
}

extend type Query {
    reviews(productID: ID): [Review!]!
    shopReviews(shopID: ID!, search: String, filter: Int): [ShopReview!]!
}

extend type Mutation {
    createReview(input: NewReview!): Review! @auth
}
